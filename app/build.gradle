apply plugin: 'com.android.application'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.unittestingexamples"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def androidx_test_version = "1.1.0"
    def androidx_arch_test_version = "2.0.1"
    def junit_jupiter_version = "5.3.2"
    def mockito_version = "2.19.0"
    def dagger_version = "2.22"
    def material_version = "1.0.0"
    def room_version = "2.1.0-beta01"
    def lifecycle_version = '2.1.0-alpha04'
    def reactivestreams_version = "1.1.1"
    def rxandroid_version = '2.1.1'
    def rxjava_version = '2.1.1'
    def rxcalladapter_version = '2.5.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // -------- INSTRUMENTATION TESTS (use JUnit4)
    androidTestImplementation 'junit:junit:4.12'

    // AndroidX test
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    // Architecture components testing
    androidTestImplementation "androidx.arch.core:core-testing:$androidx_arch_test_version"


    // -------- LOCAL UNIT TESTS (use JUnit5)
    // JUnit Jupiter
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"


    // -------- MOCKITO
    testImplementation "org.mockito:mockito-core:$mockito_version"

    // Dagger

    // Dagger2 core
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"

    // Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"


    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"


    // Reactive Streams (convert Observable to LiveData)
    implementation "android.arch.lifecycle:reactivestreams:$reactivestreams_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // Rx-Retrofit Call Adapter
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version"
}
